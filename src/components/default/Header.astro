---
import { Icon } from "astro-icon/components";

const linksPage = [
    {name: 'Inicio', link: '/'},
    {name: 'Estadisticas', link: '/estadisticas/goles'},
    {name: 'Clasificaci√≥n', link: '/clasificacion'},
    {name: 'Equipos', link: '/equipos'}
]

const path = Astro.url;

---
<header class="h-14 bg-[rgba(109,56,241,0.8))] dark:bg-[rgba(10,2,31,0.8)]  sticky top-0 z-9999 flex items-center">
    <div class="container mx-auto px-3 max-w-[1080px] flex justify-between  items-center text-white ">
        <button id="btn-menu cursor-pointer" class="md:hidden">
            <Icon name="menu"/>
        </button>
        <nav class="hidden md:flex" >
            {
                linksPage.map(res => (
                    <a href={res.link} class="mx-2" >
                        <span  >{res.name}</span>

                        {
                            (path.pathname).split('/').at(1) === (res.link).split('/').at(1) && (
                                <div class="border-t-2 border-white mt-0" transition:name="links-header"></div>
                            )
                        }
                        
                    </a>
                ))
            }
           
        </nav>
        <div class="flex items-center"  >
            <button id="buttonTheme" class="cursor-pointer mr-4">
                <Icon name="sun" class="text-3xl" style="display: none" data-ligth />
                <Icon name="moon" class="text-2xl" style="display: none" data-dark />
            </button>
            <a href="https://github.com/leorpg21/pl-fastrapiid" target="_blank" class="text-2xl">
                <Icon name="git-hub"/>
            </a>
        </div>
    </div>
</header>
<nav class="hidden flex flex-col bg-[rgba(109,56,241,0.8))] dark:bg-[rgba(10,2,31,0.8)] h-screen text-white" data-menu-mobile>
    
    {
        linksPage.map(res => (
        <a href={res.link} class="mx-2" >
            <span  >{res.name}</span>

            {
                (path.pathname).split('/').at(1) === (res.link).split('/').at(1) && (
                    <div class="border-t-2 border-white mt-0 w-8" transition:name="links-header"></div>
                )
            }
            
        </a>
        ))
    }
    
</nav>

<!-- SCRIPT PARA BARRA DE MENU EN DISPOSITVOS MOVILES -->

<script>
    const toggleMenu = () => {
        const btnMenu = document.querySelector('#btn-menu') as HTMLButtonElement;
        const menuMobile = document.querySelector('[data-menu-mobile]') as HTMLElement; 
        btnMenu.addEventListener('click', () => {
            console.log('click');
            menuMobile.classList.toggle('hidden');
        })
    }

    document.addEventListener('astro:page-load', toggleMenu);
</script>

<!-- SCRIPT PARA DARK MODE -->
<script>
const modePage  = () =>{
    // capturamos tema de color
    const savedMode = localStorage.getItem("theme") || document.documentElement.getAttribute("data-theme");
    const iLight = document.querySelector('[data-ligth]') as HTMLElement;
    const iDark = document.querySelector('[data-dark]') as HTMLElement;
    
    
    if(savedMode == "dark"){
     
      document.documentElement.setAttribute('data-theme', 'dark');
      iDark.setAttribute("style", "display: flex");
      iLight.setAttribute("style", "display: none");
      
    }
    else{
      document.documentElement.removeAttribute('data-theme');
      iLight.setAttribute("style", "display: flex");
      iDark.setAttribute("style", "display: none");
    }
    
    iLight.addEventListener('click', ()=> {
     document.documentElement.setAttribute('data-theme', 'dark');
     localStorage.setItem("theme", "dark");
     
     iDark.setAttribute('style', 'display: flex');
     iLight.setAttribute('style', 'display: none');
    
    });
    
    iDark.addEventListener('click', () => {
     document.documentElement.removeAttribute('data-theme');
     localStorage.setItem("theme", "light");
    
     iDark.setAttribute('style', 'display: none');
     iLight.setAttribute('style', 'display: flex');
    
    })

}
document.addEventListener('astro:page-load', modePage);
document.addEventListener('DOMContentLoaded', modePage);
</script>